test_name: Create a tag, add a capture to it then delete the tag.

marks:
  - usefixtures:
      - baseurl
      - clientid
      - clientsecret
      - user_fixture
      - tag_fixture
      - token_fixture

# Include variables
includes:
  - !include includes.yaml

stages:
  - name: Create a tagview and add it to the tag with the serial

    # Define the request to be made
    request:
      url: "{baseurl}/api/consumer/v1/me/tagviews"
      method: POST
      json:
        tagserial: "{tag_fixture.serial}"
      headers:
        content-type: application/json
        Authorization: "bearer {token_fixture:s}"

    # and the expected response body
    response:
      status_code: 200
      body:
        tagserial: !anystr
        id: !anyint
        timestamp: !anystr
      save:
        body:
          tagview_id: id
          tagview_timestamp: timestamp
          tagview_tagserial: tagserial

  - name: GET a list of tagviews for the current user. Verify that it contains the one we created.

    # Define the request to be made
    request:
      url: "{baseurl}/api/consumer/v1/me/tagviews"
      method: GET
      headers:
        content-type: application/json
        Authorization: "bearer {token_fixture:s}"

    # and the expected response body
    response:
      status_code: 200
      body:
        - tagserial: "{tagview_tagserial}"
          id: !int "{tagview_id:d}"
          timestamp: "{tagview_timestamp}"

  - name: GET the capture for this tag and verify that it contains the correct fields

    # Define the request to be made
    request:
      url: "{baseurl}/api/consumer/v1/me/tagviews/{tagview_id}"
      method: GET
      headers:
        content-type: application/json
        Authorization: "bearer {token_fixture:s}"

    # and the expected response body
    response:
      status_code: 200
      body:
        tagserial: "{tagview_tagserial}"
        id: !int "{tagview_id:d}"
        timestamp: "{tagview_timestamp}"