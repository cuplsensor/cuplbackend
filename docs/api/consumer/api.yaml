openapi: 3.0.1
info:
  title: cupl Consumer API
  description: API endpoints that do not require token based authentication.
  contact:
    url: www.plotsensor.com
    email: malcolm@plotsensor.com
  version: 0.0.2
paths:
  /tag/{serial}:
    get:
      tags:
      - Open
      summary: Get a tag by its serial.
      operationId: TagGet
      parameters:
      - name: serial
        in: query
        description: Tag serial
        schema:
          type: string
      responses:
        200:
          description: A tag object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        400:
          description: Bad input parameter.
          content:
            application/json:
              schema:
                type: object
        404:
          description: Tag not found.
          content: {}
    put:
      tags:
        - Open
      summary: Edit a tag description.
      operationId: TagDescriptionPut
      security:
        - Bearer: [ ]
      parameters:
        - name: serial
          in: query
          description: Tag serial
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        200:
          description: A tag object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        400:
          description: Bad input parameter.
          content:
            application/json:
              schema:
                type: object
        404:
          description: Tag not found.
          content: { }
  /captures:
    get:
      tags:
      - Open
      summary: Get a list of captures for a tag
      operationId: CapturesGet
      parameters:
      - name: serial
        in: query
        description: Tag serial
        required: true
        schema:
          type: string
      - name: offset
        in: query
        description: Return samples starting from this index.
        schema:
          type: integer
      - name: limit
        in: query
        description: Limit the number of samples returned.
        schema:
          type: integer
      responses:
        200:
          description: A capture object
          headers:
            Link:
              type: string
              description: |
                Links to related resources, in the format defined by
                [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5).
                This will include a link with relation type `next` to the
                next page, if there is a next page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capture'
        400:
          description: invalid input, object invalid
          content:
            application/json:
              schema:
                type: object
        404:
          description: Tag with serial not found.
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
      - Open
      summary: Create a capture
      operationId: CapturesPost
      requestBody:
        description: Capture creation fields
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/EncodedCapture'
        required: true
      responses:
        200:
          description: A capture object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capture'
        400:
          description: invalid input, object invalid
          content:
            application/json:
              schema:
                type: object
        401:
          description: Not authorised. HMAC does not correspond to input data.
          content:
            application/json:
              schema:
                type: object
        404:
          description: Tag not found
          content:
            application/json:
              schema:
                type: object
        409:
          description: Conflict. A capture with this HMAC already exists. Dead battery
            or replay attack.
          content:
            application/json:
              schema:
                type: object
      x-codegen-request-body-name: body
  /captures/{id}:
    get:
      tags:
      - Open
      summary: Get a capture by ID
      operationId: CaptureGet
      responses:
        200:
          description: A capture object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capture'
        400:
          description: invalid input, object invalid
          content:
            application/json:
              schema:
                type: object
        404:
          description: Capture not found.
          content:
            application/json:
              schema:
                type: object
  /captures/{id}/samples:
    get:
      tags:
      - Open
      summary: Get samples for a capture.
      operationId: SamplesGet
      parameters:
      - name: offset
        in: query
        description: Return samples starting from this index.
        schema:
          type: integer
      - name: limit
        in: query
        description: Limit the number of samples returned.
        schema:
          type: integer
      responses:
        200:
          description: A list of sample objects
          headers:
            Link:
              type: string
              description: |
                Links to related resources, in the format defined by
                [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5).
                This will include a link with relation type `next` to the
                next page, if there is a next page.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaptureSample'
        400:
          description: bad input parameter
          content:
            application/json:
              schema:
                type: object
  /samples:
    get:
      tags:
      - Open
      summary: Get unique samples for a tag in a given time range
      operationId: UniqueSamplesGet
      parameters:
      - name: serial
        in: query
        description: Tag serial
        required: true
        schema:
          type: string
      - name: starttime
        in: query
        description: start timestamp as an ISO-8601 string.
        required: true
        schema:
          type: string
          format: datetime
      - name: endtime
        in: query
        description: end timestamp as an ISO-8601 string.
        required: true
        schema:
          type: string
          format: datetime
      - name: offset
        in: query
        description: Return samples starting from this index.
        schema:
          type: integer
      - name: limit
        in: query
        description: Limit the number of samples returned.
        schema:
          type: integer
      responses:
        200:
          description: A list of samples from newest to oldest
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaptureSample'
        400:
          description: bad input parameter
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    Tag:
      title: Tag
      type: object
      properties:
        description:
          type: string
          description: A free text field that a user can modify. It may be a description of the tag location.
                       Alternatively, this may be the URL of a linked frontend web application.
          example: In the kitchen.
        fwversion:
          type: string
          description: Version string for the cuplTag firmware.
          example: HT04_F1.1_C2
          readOnly: true
        hwversion:
          type: string
          description: Version string for the cuplTag hardware.
          example: HT04
          readOnly: true
        serial:
          type: string
          description: Serial of the tag that made the capture
          example: YWJjZGVM
          readOnly: true
        timeregistered:
          type: string
          description: Time the tag was created
          format: date-time
          example: 2019-01-15T13:09:52.456
          readOnly: true
    Capture:
      title: Capture
      type: object
      properties:
        batvoltagemv:
          type: integer
          example: 3000
        tagserial:
          type: string
          description: Serial of the tag that made the capture
          example: YWJjZGVM
        cursorpos:
          type: integer
          example: 20
        id:
          type: integer
          format: int32
          example: 232
        loopcount:
          type: integer
          description: Number of times the circularbuffer pointer has wrapped from
            the end to the beginning
          example: 2
        md5:
          type: string
          example: 2f324022a223
        status:
          $ref: '#/components/schemas/CaptureStatus'
        timeintmins:
          type: integer
          example: 12
        timestamp:
          type: string
          format: date-time
          example: 2019-01-15T13:09:52.456Z
        version:
          type: integer
          example: 1
    CaptureSample:
      title: CaptureSample
      required:
      - capture_id
      - id
      - temp
      - timestamp
      type: object
      properties:
        capture_id:
          type: integer
          description: ID of the parent Capture object
          format: int32
          example: 1
        id:
          type: integer
          description: CaptureSample ID
          format: int32
          example: 1
        rh:
          type: number
          description: Relative Humidity in percent
          format: double
          example: 55.0
        temp:
          type: number
          description: Temperature in degrees Celsius
          format: double
          example: 21.0
        timestamp:
          type: string
          description: Unix timestamp in seconds since January 1st 1970
          format: date-time
          example: 2019-01-15T13:09:52.456Z
    CaptureStatus:
      title: CaptureStatus
      type: object
      properties:
        brownout:
          type: boolean
          description: True if the cause of the most recentreset was a brown out condition.
          example: false
        clockfail:
          type: boolean
          description: True if the most recent reset was caused by an MCU clock failure.
          example: false
        id:
          type: integer
          description: CaptureStatus ID
          format: int32
          example: 1
        lpm5wakeup:
          type: boolean
          description: True if the MCU has woken up from LPM (Low Power Mode) x.5
          example: false
        misc:
          type: boolean
          description: True if a reset has occured for miscellaneous reasons
          example: false
        parent_capture:
          type: integer
          description: Parent Capture ID
          format: int32
          example: 232
        resetsalltime:
          type: integer
          example: 20
        supervisor:
          type: boolean
          description: True if the supply voltage supervisor caused the most recent
            reset
          example: false
        watchdog:
          type: boolean
          description: True if the MCU watchdog caused the most recent reset.
          example: false
    EncodedCapture:
      title: Base64 Encoded Capture
      type: object
      properties:
        circbufb64:
          type: string
          description: Circular buffer including samples encoded as base64.
          example: Add example here
        serial:
          type: string
          description: Serial of the tag that made the capture
          example: YWJjZGVM
        statusb64:
          type: string
          description: 12 character status string
          example: AAAAAAAA
        timeintb64:
          type: string
          description: Time interval in minutes in base64
          example: Awg=
        versionStr:
          type: string
          example: "0001"
  securitySchemes:
    Bearer: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: TagToken JWT    # optional, arbitrary value for documentation purposes
