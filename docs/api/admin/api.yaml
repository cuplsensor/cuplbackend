openapi: 3.0.1
info:
  title: cupl Administrator API
  description: API endpoints that require administrator access.
  contact:
    url: www.plotsensor.com
    email: malcolm@plotsensor.com
  version: 0.0.2
paths:
  /token:
    post:
      description: Obtain a JWT for interacting with this API.
      summary: Obtain a bearer token.
      operationId: TokenPost
      responses:
        '200':
          description: A bearer token that can be used to make calls to other endpoints in this API.
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: No credentials supplied
          content:
            application/json:
              schema: {}
        '401':
          description: Bad credentials
          content:
            application/json:
              schema: {}
      security: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
        description: Token Request Credentials
        required: true
  /capture:
    get:
      description: Get a capture by its ID.
      summary: get a capture.
      operationId: AdminCaptureGet
      security:
        - Bearer: []
      parameters:
        - name: id
          in: query
          required: false
          description: Capture id
          schema:
            type: integer
      responses:
        '200':
          description: A capture object
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capture'
        '400':
          description: bad input parameter
          content:
            application/json:
              schema: {}
    delete:
      description: delete a capture
      summary: delete a capture
      operationId: AdminCaptureDelete
      security:
        - Bearer: []
      parameters:
        - name: id
          in: query
          required: false
          description: Capture id
          schema:
            type: integer
      responses:
        '204':
          description: Capture has been deleted
          content:
            application/json:
              schema: {}
        '400':
          description: bad input parameter
          content:
            application/json:
              schema: {}
        '404':
          description: No capture found
          content:
            application/json:
              schema: {}
  /captures:
    get:
      description: Get a list of captures
      summary: Get a list of captures ordered by ID.
      operationId: CapturesGet
      parameters:
        - name: offset
          in: query
          description: Return captures starting from this index.
          schema:
            type: integer
        - name: limit
          in: query
          description: Limit the number of captures returned.
          schema:
            type: integer
        - name: tag_id
          in: query
          description: Only returns captures from tag_id.
          schema:
            type: integer
      security:
        - Bearer: []
      responses:
        200:
          description: List of captures
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Capture'
        400:
          description: bad input parameter
          content:
            application/json:
              schema: {}
    post:
      description: Create a capture
      summary: create a capture
      operationId: AdminCapturePost
      security:
        - Bearer: []
      responses:
        '201':
          description: Capture created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capture'
          headers: {}
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema: {}
        '409':
          description: a capture with the same id already exists
          content:
            application/json:
              schema: {}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Capture'
        description: Capture object
  /tag:
    get:
      description: Get a tag from an id.
      summary: get a tag
      operationId: TagGet
      security:
        - Bearer: []
      parameters:
        - name: id
          in: query
          required: false
          description: Tag id
          schema:
            type: integer
      responses:
        '200':
          description: A tag object
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '400':
          description: bad input parameter
          content:
            application/json:
              schema: {}

    delete:
      description: delete a tag
      summary: delete a tag
      operationId: TagDelete
      security:
        - Bearer: []
      parameters:
        - name: id
          in: query
          required: false
          description: Tag id
          schema:
            type: integer
      responses:
        '204':
          description: Tag has been deleted
          content:
            application/json:
              schema: {}
        '400':
          description: bad input parameter
          content:
            application/json:
              schema: {}
        '404':
          description: No tag found
          content:
            application/json:
              schema: {}
  /tag/{id}/simulate:
    get:
      description: Obtain a simulated URL from the tag. This will contain mock sensor data.
      summary: Simulate URL.
      operationId: TagSimGet
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          description: Tag id to simulate
          schema:
            type: integer
        - name: frontendurl
          in: query
          required: true
          description: URL of the consumer frontend application that will decode wscodec URLs.
          schema:
            type: string
        - name: nsamples
          in: query
          required: false
          description: Number of temperature and humidity samples to include in the wscodec URL.
                       0 samples is valid and should raise an error.
          schema:
            type: integer
            default: 100
        - name: smplintervalmins
          in: query
          required: false
          description: Time interval between samples in minutes.
          schema:
            type: integer
            default: 10
        - name: format
          in: query
          required: false
          description: Format code e.g. 1 for temperature and humidity and 2 for temperarture samples only.
          schema:
            type: integer
            default: 1
        - name: usehmac
          in: query
          required: false
          description: Use HMAC rather than MD5.
          schema:
            type: boolean
            default: true
        - name: batvoltagemv
          in: query
          required: false
          description: Battery voltage in mV.
          schema:
            type: integer
            default: 3000
        - name: bor
          in: query
          required: false
          description: Reset caused by Brownout.
          schema:
            type: boolean
            default: false
        - name: svsh
          in: query
          required: false
          description: Reset caused by Supply Voltage Supervisor (High Side).
          schema:
            type: boolean
            default: false
        - name: wdt
          in: query
          required: false
          description: Reset caused by watchdog timer.
          schema:
            type: boolean
            default: false
        - name: misc
          in: query
          required: false
          description: Miscellaneous error flag on cupl Tag.
          schema:
            type: boolean
            default: false
        - name: lpm5wu
          in: query
          required: false
          description: Low Power Mode x.5 wakeup flag.
          schema:
            type: boolean
            default: false
        - name: clockfail
          in: query
          required: false
          description: Clock failure error flag.
          schema:
            type: boolean
            default: false
        - name: tagerror
          in: query
          required: false
          description: Initialise encoder with the error flag set. The circular buffer will be empty.
          schema:
            type: boolean
            default: false

      responses:
        '200':
          description: URL containing sensor data.
          headers: {}
          content:
            application/json:
              schema:
                type: string
        '400':
          description: bad input parameter
          content:
            application/json:
              schema: {}
  /tags:
    get:
      description: Get a list of tags
      summary: Get a list of tags ordered by ID.
      operationId: TagsGet
      parameters:
        - name: offset
          in: query
          description: Return samples starting from this index.
          schema:
            type: integer
        - name: limit
          in: query
          description: Limit the number of samples returned.
          schema:
            type: integer
      security:
        - Bearer: []
      responses:
        200:
          description: List of tags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
        400:
          description: bad input parameter
          content:
            application/json:
              schema: {}
    post:
      description: Create a tag
      summary: create a tag
      operationId: TagPost
      security:
        - Bearer: []
      responses:
        201:
          description: Tag created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          headers: {}
        400:
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema: {}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsPost'
        description: Tag id
components:
  schemas:
    TagsPost:
      title: TagPost
      type: object
      properties:
        id:
          type: integer
          format: int32
    Tag:
      title: Tag
      type: object
      properties:
        id:
          type: integer
          format: int32
        serial:
          example: YWJjZGVM
          type: string
        secretKey:
          example: AAAAcCcC
          type: string
        timeregistered:
          type: string
          format: date-time
    Capture:
      title: Capture
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
          readOnly: true
          description: Database ID of the capture.
        tag_id:
          type: integer
          format: int32
          example: 1
          description: Database ID of a tag the capture was taken from.
        batvoltage:
          type: integer
          format: int32
          example: 2900
          description: Tag battery voltage in mV.
        timestamp:
          type: string
          example: 2020-09-01T05:27:06Z
          description: Time the capture was taken in the ISO 8601 format.
        loopcount:
          type: integer
          format: int32
          example: 10
          description: The number of times the tag circular buffer has looped around. This indicates how long the
          tag has been running for.
        version:
          type: integer
          format: int32
          example: 2
          description: Major version of cuplCodec running on the tag.
        cursorpos:
          type: integer
          format: int32
          example: 24
          description: Position of cursor in the circular buffer. The newest environmental sensor data are to the left of
          this cursor and the oldest to the right.
        timeintmins:
          type: integer
          format: int32
          example: 10
          description: Time interval between samples in minutes.
        md5:
          type: string
          example: d673aafc976e85
          description: Hash of the capture. This may be either HMAC or MD5 (the name will be altered in future).
        status:
          $ref: '#/components/schemas/CaptureStatus'
        samples:
          type: array
          items:
            $ref: '#/components/schemas/CaptureSample'
    CaptureStatus:
      title: CaptureStatus
      type: object
      properties:
        brownout:
          type: boolean
          description: True if the cause of the most recentreset was a brown out condition.
          example: false
        clockfail:
          type: boolean
          description: True if the most recent reset was caused by an MCU clock failure.
          example: false
        id:
          type: integer
          description: CaptureStatus ID
          format: int32
          example: 1
        lpm5wakeup:
          type: boolean
          description: True if the MCU has woken up from LPM (Low Power Mode) x.5
          example: false
        misc:
          type: boolean
          description: True if a reset has occured for miscellaneous reasons
          example: false
        parent_capture:
          type: integer
          description: Parent Capture ID
          format: int32
          example: 232
        resetsalltime:
          type: integer
          example: 20
        supervisor:
          type: boolean
          description: True if the supply voltage supervisor caused the most recent
            reset
          example: false
        watchdog:
          type: boolean
          description: True if the MCU watchdog caused the most recent reset.
          example: false
    CaptureSample:
      title: CaptureSample
      required:
        - capture_id
        - id
        - temp
        - timestamp
      type: object
      properties:
        capture_id:
          type: integer
          description: ID of the parent Capture object
          format: int32
          example: 1
        id:
          type: integer
          description: CaptureSample ID
          format: int32
          example: 1
        rh:
          type: number
          description: Relative Humidity in percent
          format: double
          example: 55.0
        temp:
          type: number
          description: Temperature in degrees Celsius
          format: double
          example: 21.0
        timestamp:
          type: string
          description: Unix timestamp in seconds since January 1st 1970
          format: date-time
          example: 2019-01-15T13:09:52.456Z
    Token:
      title: Token
      type: object
      properties:
        token:
          example: eyJz93a...k4laUWw
          type: string
        token_type:
          example: Bearer
          type: string
    TokenRequest:
      title: TokenRequest
      type: object
      properties:
        client_id:
          example: ABE39cASE940
          type: string
        client_secret:
          example: nsfsaeASEFGSAE
          type: string