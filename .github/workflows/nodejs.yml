name: Node.js CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      ADMINAPI_CLIENTSECRET: dasgasesdave
      DB_PASS: 4tskngvknldkf
      DB_HOST: localhost
      DB_USER: postgres
      DB_NAME: postgres
      DB_PORT: 5432
      WSB_HOST: localhost
      WSB_PORT: 5000
      CSRF_SESSION_KEY: elkafnleknf
      SECRET_KEY: feanlksenlkas

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: cd tests/oauth2-mock
    - run: npm install
    - run: npm install -g forever
    - run: forever start tests/oauth2-mock/app.js
    - run: cd ../../

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.7'

    - name: Install dependencies
      run: sudo apt-get install python3-setuptools
    - run: sudo apt-get install build-essential
    - run: sudo apt-get install python3-dev
    - run: sudo apt-get install libpq-dev

    - name: Install Python 3 dependencies
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip # This path is specific to Ubuntu
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install uwsgi

    - name: Install postgres
      uses: harmon758/postgresql-action@v1
      with:
        postgresql version: '11'  # See https://hub.docker.com/_/postgres for available versions
        postgresql db: ${{ env.DB_HOST }}
        postgresql user: ${{ env.DB_USER }}
        postgresql password: ${{ env.DB_PASS }}

    - name: Run uwsgi server and daemonize
      run: uwsgi --socket ${{ env.WSB_HOST }}:${{ env.WSB_PORT }} --protocol=http -w -d --ini uwsgi.ini

    - name: Start tests
      run:   python3 -m pytest --showlocals
      env:
        CI: true

